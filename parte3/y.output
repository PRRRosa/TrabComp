State 59 conflicts: 1 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: programa decl
    2         | /* empty */

    3 decl: vardec
    4     | fundec

    5 vardec: singleVarDec
    6       | arrayDec

    7 vartype: KW_BYTE
    8        | KW_INT
    9        | KW_LONG
   10        | KW_FLOAT
   11        | KW_BOOL

   12 singleVarDec: vartype TK_IDENTIFIER '=' init ';'

   13 arrayDec: vartype TK_IDENTIFIER '[' LIT_INTEGER ']' ':' listInit ';'
   14         | vartype TK_IDENTIFIER '[' LIT_INTEGER ']' ';'

   15 listInit: init
   16         | init listInit

   17 init: LIT_INTEGER
   18     | LIT_FLOAT
   19     | LIT_TRUE
   20     | LIT_FALSE
   21     | LIT_CHAR

   22 fundec: vartype TK_IDENTIFIER '(' varDeclFunc ')' cmd

   23 cmd: assignmentCommand
   24    | KW_PRINT printString
   25    | ifCommand
   26    | KW_READ TK_IDENTIFIER
   27    | whileCommand
   28    | funCall
   29    | forCommand
   30    | KW_BREAK
   31    | KW_RETURN expression
   32    | block
   33    | /* empty */

   34 assignmentCommand: TK_IDENTIFIER '=' expression
   35                  | TK_IDENTIFIER '[' expression ']' '=' expression

   36 printString: LIT_STRING
   37            | expression
   38            | LIT_STRING printString
   39            | expression printString

   40 expression: '(' expression ')'
   41           | expression OPERATOR_LE expression
   42           | expression OPERATOR_GE expression
   43           | expression OPERATOR_EQ expression
   44           | expression OPERATOR_DIF expression
   45           | expression '<' expression
   46           | expression '>' expression
   47           | expression 'v' expression
   48           | expression '+' expression
   49           | expression '-' expression
   50           | expression '*' expression
   51           | expression '/' expression
   52           | init
   53           | funCall
   54           | TK_IDENTIFIER
   55           | TK_IDENTIFIER '[' expression ']'

   56 whileCommand: KW_WHILE '(' expression ')' cmd

   57 funCall: TK_IDENTIFIER '(' argList ')'
   58        | TK_IDENTIFIER '(' ')'

   59 argList: expression ',' argList
   60        | expression

   61 ifCommand: KW_IF '(' expression ')' KW_THEN cmd
   62          | KW_IF '(' expression ')' KW_THEN cmd KW_ELSE cmd

   63 forCommand: KW_FOR '(' TK_IDENTIFIER ':' expression ',' expression ',' expression ')' cmd

   64 varDeclFunc: declParam
   65            | declParam varDeclFuncMeio
   66            | /* empty */

   67 varDeclFuncMeio: ',' declParam varDeclFuncMeio
   68                | ',' declParam

   69 declParam: vartype TK_IDENTIFIER

   70 block: '{' lcmd '}'

   71 lcmd: cmd
   72     | cmd lcmdMeio

   73 lcmdMeio: ';' cmd lcmdMeio
   74         | ';' cmd


Terminals, with rules where they appear

$end (0) 0
'(' (40) 22 40 56 57 58 61 62 63
')' (41) 22 40 56 57 58 61 62 63
'*' (42) 50
'+' (43) 48
',' (44) 59 63 67 68
'-' (45) 49
'/' (47) 51
':' (58) 13 63
';' (59) 12 13 14 73 74
'<' (60) 45
'=' (61) 12 34 35
'>' (62) 46
'[' (91) 13 14 35 55
']' (93) 13 14 35 55
'v' (118) 47
'{' (123) 70
'}' (125) 70
error (256)
KW_BYTE (258) 7
KW_INT (259) 8
KW_LONG (260) 9
KW_FLOAT (261) 10
KW_BOOL (262) 11
KW_IF (263) 61 62
KW_THEN (264) 61 62
KW_ELSE (265) 62
KW_WHILE (266) 56
KW_FOR (267) 63
KW_READ (268) 26
KW_PRINT (269) 24
KW_RETURN (270) 31
KW_BREAK (271) 30
OPERATOR_LE (272) 41
OPERATOR_GE (273) 42
OPERATOR_EQ (274) 43
OPERATOR_DIF (275) 44
TK_IDENTIFIER (276) 12 13 14 22 26 34 35 54 55 57 58 63 69
LIT_INTEGER (277) 13 14 17
LIT_FLOAT (278) 18
LIT_TRUE (279) 19
LIT_FALSE (280) 20
LIT_CHAR (281) 21
LIT_STRING (282) 36 38
IFX (283)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
programa (47)
    on left: 1 2, on right: 0 1
decl (48)
    on left: 3 4, on right: 1
vardec (49)
    on left: 5 6, on right: 3
vartype (50)
    on left: 7 8 9 10 11, on right: 12 13 14 22 69
singleVarDec (51)
    on left: 12, on right: 5
arrayDec (52)
    on left: 13 14, on right: 6
listInit (53)
    on left: 15 16, on right: 13 16
init (54)
    on left: 17 18 19 20 21, on right: 12 15 16 52
fundec (55)
    on left: 22, on right: 4
cmd (56)
    on left: 23 24 25 26 27 28 29 30 31 32 33, on right: 22 56 61 62
    63 71 72 73 74
assignmentCommand (57)
    on left: 34 35, on right: 23
printString (58)
    on left: 36 37 38 39, on right: 24 38 39
expression (59)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55,
    on right: 31 34 35 37 39 40 41 42 43 44 45 46 47 48 49 50 51 55
    56 59 60 61 62 63
whileCommand (60)
    on left: 56, on right: 27
funCall (61)
    on left: 57 58, on right: 28 53
argList (62)
    on left: 59 60, on right: 57 59
ifCommand (63)
    on left: 61 62, on right: 25
forCommand (64)
    on left: 63, on right: 29
varDeclFunc (65)
    on left: 64 65 66, on right: 22
varDeclFuncMeio (66)
    on left: 67 68, on right: 65 67
declParam (67)
    on left: 69, on right: 64 65 67 68
block (68)
    on left: 70, on right: 32
lcmd (69)
    on left: 71 72, on right: 70
lcmdMeio (70)
    on left: 73 74, on right: 72 73


state 0

    0 $accept: . programa $end

    $default  reduce using rule 2 (programa)

    programa  go to state 1


state 1

    0 $accept: programa . $end
    1 programa: programa . decl

    $end      shift, and go to state 2
    KW_BYTE   shift, and go to state 3
    KW_INT    shift, and go to state 4
    KW_LONG   shift, and go to state 5
    KW_FLOAT  shift, and go to state 6
    KW_BOOL   shift, and go to state 7

    decl          go to state 8
    vardec        go to state 9
    vartype       go to state 10
    singleVarDec  go to state 11
    arrayDec      go to state 12
    fundec        go to state 13


state 2

    0 $accept: programa $end .

    $default  accept


state 3

    7 vartype: KW_BYTE .

    $default  reduce using rule 7 (vartype)


state 4

    8 vartype: KW_INT .

    $default  reduce using rule 8 (vartype)


state 5

    9 vartype: KW_LONG .

    $default  reduce using rule 9 (vartype)


state 6

   10 vartype: KW_FLOAT .

    $default  reduce using rule 10 (vartype)


state 7

   11 vartype: KW_BOOL .

    $default  reduce using rule 11 (vartype)


state 8

    1 programa: programa decl .

    $default  reduce using rule 1 (programa)


state 9

    3 decl: vardec .

    $default  reduce using rule 3 (decl)


state 10

   12 singleVarDec: vartype . TK_IDENTIFIER '=' init ';'
   13 arrayDec: vartype . TK_IDENTIFIER '[' LIT_INTEGER ']' ':' listInit ';'
   14         | vartype . TK_IDENTIFIER '[' LIT_INTEGER ']' ';'
   22 fundec: vartype . TK_IDENTIFIER '(' varDeclFunc ')' cmd

    TK_IDENTIFIER  shift, and go to state 14


state 11

    5 vardec: singleVarDec .

    $default  reduce using rule 5 (vardec)


state 12

    6 vardec: arrayDec .

    $default  reduce using rule 6 (vardec)


state 13

    4 decl: fundec .

    $default  reduce using rule 4 (decl)


state 14

   12 singleVarDec: vartype TK_IDENTIFIER . '=' init ';'
   13 arrayDec: vartype TK_IDENTIFIER . '[' LIT_INTEGER ']' ':' listInit ';'
   14         | vartype TK_IDENTIFIER . '[' LIT_INTEGER ']' ';'
   22 fundec: vartype TK_IDENTIFIER . '(' varDeclFunc ')' cmd

    '='  shift, and go to state 15
    '['  shift, and go to state 16
    '('  shift, and go to state 17


state 15

   12 singleVarDec: vartype TK_IDENTIFIER '=' . init ';'

    LIT_INTEGER  shift, and go to state 18
    LIT_FLOAT    shift, and go to state 19
    LIT_TRUE     shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_CHAR     shift, and go to state 22

    init  go to state 23


state 16

   13 arrayDec: vartype TK_IDENTIFIER '[' . LIT_INTEGER ']' ':' listInit ';'
   14         | vartype TK_IDENTIFIER '[' . LIT_INTEGER ']' ';'

    LIT_INTEGER  shift, and go to state 24


state 17

   22 fundec: vartype TK_IDENTIFIER '(' . varDeclFunc ')' cmd

    KW_BYTE   shift, and go to state 3
    KW_INT    shift, and go to state 4
    KW_LONG   shift, and go to state 5
    KW_FLOAT  shift, and go to state 6
    KW_BOOL   shift, and go to state 7

    $default  reduce using rule 66 (varDeclFunc)

    vartype      go to state 25
    varDeclFunc  go to state 26
    declParam    go to state 27


state 18

   17 init: LIT_INTEGER .

    $default  reduce using rule 17 (init)


state 19

   18 init: LIT_FLOAT .

    $default  reduce using rule 18 (init)


state 20

   19 init: LIT_TRUE .

    $default  reduce using rule 19 (init)


state 21

   20 init: LIT_FALSE .

    $default  reduce using rule 20 (init)


state 22

   21 init: LIT_CHAR .

    $default  reduce using rule 21 (init)


state 23

   12 singleVarDec: vartype TK_IDENTIFIER '=' init . ';'

    ';'  shift, and go to state 28


state 24

   13 arrayDec: vartype TK_IDENTIFIER '[' LIT_INTEGER . ']' ':' listInit ';'
   14         | vartype TK_IDENTIFIER '[' LIT_INTEGER . ']' ';'

    ']'  shift, and go to state 29


state 25

   69 declParam: vartype . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 30


state 26

   22 fundec: vartype TK_IDENTIFIER '(' varDeclFunc . ')' cmd

    ')'  shift, and go to state 31


state 27

   64 varDeclFunc: declParam .
   65            | declParam . varDeclFuncMeio

    ','  shift, and go to state 32

    $default  reduce using rule 64 (varDeclFunc)

    varDeclFuncMeio  go to state 33


state 28

   12 singleVarDec: vartype TK_IDENTIFIER '=' init ';' .

    $default  reduce using rule 12 (singleVarDec)


state 29

   13 arrayDec: vartype TK_IDENTIFIER '[' LIT_INTEGER ']' . ':' listInit ';'
   14         | vartype TK_IDENTIFIER '[' LIT_INTEGER ']' . ';'

    ';'  shift, and go to state 34
    ':'  shift, and go to state 35


state 30

   69 declParam: vartype TK_IDENTIFIER .

    $default  reduce using rule 69 (declParam)


state 31

   22 fundec: vartype TK_IDENTIFIER '(' varDeclFunc ')' . cmd

    KW_IF          shift, and go to state 36
    KW_WHILE       shift, and go to state 37
    KW_FOR         shift, and go to state 38
    KW_READ        shift, and go to state 39
    KW_PRINT       shift, and go to state 40
    KW_RETURN      shift, and go to state 41
    KW_BREAK       shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43
    '{'            shift, and go to state 44

    $default  reduce using rule 33 (cmd)

    cmd                go to state 45
    assignmentCommand  go to state 46
    whileCommand       go to state 47
    funCall            go to state 48
    ifCommand          go to state 49
    forCommand         go to state 50
    block              go to state 51


state 32

   67 varDeclFuncMeio: ',' . declParam varDeclFuncMeio
   68                | ',' . declParam

    KW_BYTE   shift, and go to state 3
    KW_INT    shift, and go to state 4
    KW_LONG   shift, and go to state 5
    KW_FLOAT  shift, and go to state 6
    KW_BOOL   shift, and go to state 7

    vartype    go to state 25
    declParam  go to state 52


state 33

   65 varDeclFunc: declParam varDeclFuncMeio .

    $default  reduce using rule 65 (varDeclFunc)


state 34

   14 arrayDec: vartype TK_IDENTIFIER '[' LIT_INTEGER ']' ';' .

    $default  reduce using rule 14 (arrayDec)


state 35

   13 arrayDec: vartype TK_IDENTIFIER '[' LIT_INTEGER ']' ':' . listInit ';'

    LIT_INTEGER  shift, and go to state 18
    LIT_FLOAT    shift, and go to state 19
    LIT_TRUE     shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_CHAR     shift, and go to state 22

    listInit  go to state 53
    init      go to state 54


state 36

   61 ifCommand: KW_IF . '(' expression ')' KW_THEN cmd
   62          | KW_IF . '(' expression ')' KW_THEN cmd KW_ELSE cmd

    '('  shift, and go to state 55


state 37

   56 whileCommand: KW_WHILE . '(' expression ')' cmd

    '('  shift, and go to state 56


state 38

   63 forCommand: KW_FOR . '(' TK_IDENTIFIER ':' expression ',' expression ',' expression ')' cmd

    '('  shift, and go to state 57


state 39

   26 cmd: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 58


state 40

   24 cmd: KW_PRINT . printString

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    LIT_STRING     shift, and go to state 60
    '('            shift, and go to state 61

    init         go to state 62
    printString  go to state 63
    expression   go to state 64
    funCall      go to state 65


state 41

   31 cmd: KW_RETURN . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 66
    funCall     go to state 65


state 42

   30 cmd: KW_BREAK .

    $default  reduce using rule 30 (cmd)


state 43

   34 assignmentCommand: TK_IDENTIFIER . '=' expression
   35                  | TK_IDENTIFIER . '[' expression ']' '=' expression
   57 funCall: TK_IDENTIFIER . '(' argList ')'
   58        | TK_IDENTIFIER . '(' ')'

    '='  shift, and go to state 67
    '['  shift, and go to state 68
    '('  shift, and go to state 69


state 44

   70 block: '{' . lcmd '}'

    KW_IF          shift, and go to state 36
    KW_WHILE       shift, and go to state 37
    KW_FOR         shift, and go to state 38
    KW_READ        shift, and go to state 39
    KW_PRINT       shift, and go to state 40
    KW_RETURN      shift, and go to state 41
    KW_BREAK       shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43
    '{'            shift, and go to state 44

    $default  reduce using rule 33 (cmd)

    cmd                go to state 70
    assignmentCommand  go to state 46
    whileCommand       go to state 47
    funCall            go to state 48
    ifCommand          go to state 49
    forCommand         go to state 50
    block              go to state 51
    lcmd               go to state 71


state 45

   22 fundec: vartype TK_IDENTIFIER '(' varDeclFunc ')' cmd .

    $default  reduce using rule 22 (fundec)


state 46

   23 cmd: assignmentCommand .

    $default  reduce using rule 23 (cmd)


state 47

   27 cmd: whileCommand .

    $default  reduce using rule 27 (cmd)


state 48

   28 cmd: funCall .

    $default  reduce using rule 28 (cmd)


state 49

   25 cmd: ifCommand .

    $default  reduce using rule 25 (cmd)


state 50

   29 cmd: forCommand .

    $default  reduce using rule 29 (cmd)


state 51

   32 cmd: block .

    $default  reduce using rule 32 (cmd)


state 52

   67 varDeclFuncMeio: ',' declParam . varDeclFuncMeio
   68                | ',' declParam .

    ','  shift, and go to state 32

    $default  reduce using rule 68 (varDeclFuncMeio)

    varDeclFuncMeio  go to state 72


state 53

   13 arrayDec: vartype TK_IDENTIFIER '[' LIT_INTEGER ']' ':' listInit . ';'

    ';'  shift, and go to state 73


state 54

   15 listInit: init .
   16         | init . listInit

    LIT_INTEGER  shift, and go to state 18
    LIT_FLOAT    shift, and go to state 19
    LIT_TRUE     shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_CHAR     shift, and go to state 22

    $default  reduce using rule 15 (listInit)

    listInit  go to state 74
    init      go to state 54


state 55

   61 ifCommand: KW_IF '(' . expression ')' KW_THEN cmd
   62          | KW_IF '(' . expression ')' KW_THEN cmd KW_ELSE cmd

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 75
    funCall     go to state 65


state 56

   56 whileCommand: KW_WHILE '(' . expression ')' cmd

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 76
    funCall     go to state 65


state 57

   63 forCommand: KW_FOR '(' . TK_IDENTIFIER ':' expression ',' expression ',' expression ')' cmd

    TK_IDENTIFIER  shift, and go to state 77


state 58

   26 cmd: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 26 (cmd)


state 59

   54 expression: TK_IDENTIFIER .
   55           | TK_IDENTIFIER . '[' expression ']'
   57 funCall: TK_IDENTIFIER . '(' argList ')'
   58        | TK_IDENTIFIER . '(' ')'

    '['  shift, and go to state 78
    '('  shift, and go to state 69

    '('       [reduce using rule 54 (expression)]
    $default  reduce using rule 54 (expression)


state 60

   36 printString: LIT_STRING .
   38            | LIT_STRING . printString

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    LIT_STRING     shift, and go to state 60
    '('            shift, and go to state 61

    $default  reduce using rule 36 (printString)

    init         go to state 62
    printString  go to state 79
    expression   go to state 64
    funCall      go to state 65


state 61

   40 expression: '(' . expression ')'

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 80
    funCall     go to state 65


state 62

   52 expression: init .

    $default  reduce using rule 52 (expression)


state 63

   24 cmd: KW_PRINT printString .

    $default  reduce using rule 24 (cmd)


state 64

   37 printString: expression .
   39            | expression . printString
   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    OPERATOR_LE    shift, and go to state 81
    OPERATOR_GE    shift, and go to state 82
    OPERATOR_EQ    shift, and go to state 83
    OPERATOR_DIF   shift, and go to state 84
    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    LIT_STRING     shift, and go to state 60
    '<'            shift, and go to state 85
    '>'            shift, and go to state 86
    'v'            shift, and go to state 87
    '+'            shift, and go to state 88
    '-'            shift, and go to state 89
    '*'            shift, and go to state 90
    '/'            shift, and go to state 91
    '('            shift, and go to state 61

    $default  reduce using rule 37 (printString)

    init         go to state 62
    printString  go to state 92
    expression   go to state 64
    funCall      go to state 65


state 65

   53 expression: funCall .

    $default  reduce using rule 53 (expression)


state 66

   31 cmd: KW_RETURN expression .
   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 31 (cmd)


state 67

   34 assignmentCommand: TK_IDENTIFIER '=' . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 93
    funCall     go to state 65


state 68

   35 assignmentCommand: TK_IDENTIFIER '[' . expression ']' '=' expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 94
    funCall     go to state 65


state 69

   57 funCall: TK_IDENTIFIER '(' . argList ')'
   58        | TK_IDENTIFIER '(' . ')'

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61
    ')'            shift, and go to state 95

    init        go to state 62
    expression  go to state 96
    funCall     go to state 65
    argList     go to state 97


state 70

   71 lcmd: cmd .
   72     | cmd . lcmdMeio

    ';'  shift, and go to state 98

    $default  reduce using rule 71 (lcmd)

    lcmdMeio  go to state 99


state 71

   70 block: '{' lcmd . '}'

    '}'  shift, and go to state 100


state 72

   67 varDeclFuncMeio: ',' declParam varDeclFuncMeio .

    $default  reduce using rule 67 (varDeclFuncMeio)


state 73

   13 arrayDec: vartype TK_IDENTIFIER '[' LIT_INTEGER ']' ':' listInit ';' .

    $default  reduce using rule 13 (arrayDec)


state 74

   16 listInit: init listInit .

    $default  reduce using rule 16 (listInit)


state 75

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression
   61 ifCommand: KW_IF '(' expression . ')' KW_THEN cmd
   62          | KW_IF '(' expression . ')' KW_THEN cmd KW_ELSE cmd

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 101


state 76

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression
   56 whileCommand: KW_WHILE '(' expression . ')' cmd

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 102


state 77

   63 forCommand: KW_FOR '(' TK_IDENTIFIER . ':' expression ',' expression ',' expression ')' cmd

    ':'  shift, and go to state 103


state 78

   55 expression: TK_IDENTIFIER '[' . expression ']'

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 104
    funCall     go to state 65


state 79

   38 printString: LIT_STRING printString .

    $default  reduce using rule 38 (printString)


state 80

   40 expression: '(' expression . ')'
   41           | expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 105


state 81

   41 expression: expression OPERATOR_LE . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 106
    funCall     go to state 65


state 82

   42 expression: expression OPERATOR_GE . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 107
    funCall     go to state 65


state 83

   43 expression: expression OPERATOR_EQ . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 108
    funCall     go to state 65


state 84

   44 expression: expression OPERATOR_DIF . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 109
    funCall     go to state 65


state 85

   45 expression: expression '<' . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 110
    funCall     go to state 65


state 86

   46 expression: expression '>' . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 111
    funCall     go to state 65


state 87

   47 expression: expression 'v' . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 112
    funCall     go to state 65


state 88

   48 expression: expression '+' . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 113
    funCall     go to state 65


state 89

   49 expression: expression '-' . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 114
    funCall     go to state 65


state 90

   50 expression: expression '*' . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 115
    funCall     go to state 65


state 91

   51 expression: expression '/' . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 116
    funCall     go to state 65


state 92

   39 printString: expression printString .

    $default  reduce using rule 39 (printString)


state 93

   34 assignmentCommand: TK_IDENTIFIER '=' expression .
   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 34 (assignmentCommand)


state 94

   35 assignmentCommand: TK_IDENTIFIER '[' expression . ']' '=' expression
   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ']'           shift, and go to state 117


state 95

   58 funCall: TK_IDENTIFIER '(' ')' .

    $default  reduce using rule 58 (funCall)


state 96

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression
   59 argList: expression . ',' argList
   60        | expression .

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ','           shift, and go to state 118

    $default  reduce using rule 60 (argList)


state 97

   57 funCall: TK_IDENTIFIER '(' argList . ')'

    ')'  shift, and go to state 119


state 98

   73 lcmdMeio: ';' . cmd lcmdMeio
   74         | ';' . cmd

    KW_IF          shift, and go to state 36
    KW_WHILE       shift, and go to state 37
    KW_FOR         shift, and go to state 38
    KW_READ        shift, and go to state 39
    KW_PRINT       shift, and go to state 40
    KW_RETURN      shift, and go to state 41
    KW_BREAK       shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43
    '{'            shift, and go to state 44

    $default  reduce using rule 33 (cmd)

    cmd                go to state 120
    assignmentCommand  go to state 46
    whileCommand       go to state 47
    funCall            go to state 48
    ifCommand          go to state 49
    forCommand         go to state 50
    block              go to state 51


state 99

   72 lcmd: cmd lcmdMeio .

    $default  reduce using rule 72 (lcmd)


state 100

   70 block: '{' lcmd '}' .

    $default  reduce using rule 70 (block)


state 101

   61 ifCommand: KW_IF '(' expression ')' . KW_THEN cmd
   62          | KW_IF '(' expression ')' . KW_THEN cmd KW_ELSE cmd

    KW_THEN  shift, and go to state 121


state 102

   56 whileCommand: KW_WHILE '(' expression ')' . cmd

    KW_IF          shift, and go to state 36
    KW_WHILE       shift, and go to state 37
    KW_FOR         shift, and go to state 38
    KW_READ        shift, and go to state 39
    KW_PRINT       shift, and go to state 40
    KW_RETURN      shift, and go to state 41
    KW_BREAK       shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43
    '{'            shift, and go to state 44

    $default  reduce using rule 33 (cmd)

    cmd                go to state 122
    assignmentCommand  go to state 46
    whileCommand       go to state 47
    funCall            go to state 48
    ifCommand          go to state 49
    forCommand         go to state 50
    block              go to state 51


state 103

   63 forCommand: KW_FOR '(' TK_IDENTIFIER ':' . expression ',' expression ',' expression ')' cmd

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 123
    funCall     go to state 65


state 104

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression
   55           | TK_IDENTIFIER '[' expression . ']'

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ']'           shift, and go to state 124


state 105

   40 expression: '(' expression ')' .

    $default  reduce using rule 40 (expression)


state 106

   41 expression: expression . OPERATOR_LE expression
   41           | expression OPERATOR_LE expression .
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 41 (expression)


state 107

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   42           | expression OPERATOR_GE expression .
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 42 (expression)


state 108

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   43           | expression OPERATOR_EQ expression .
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 43 (expression)


state 109

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   44           | expression OPERATOR_DIF expression .
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 44 (expression)


state 110

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   45           | expression '<' expression .
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 45 (expression)


state 111

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   46           | expression '>' expression .
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 46 (expression)


state 112

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   47           | expression 'v' expression .
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 47 (expression)


state 113

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   48           | expression '+' expression .
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 48 (expression)


state 114

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   49           | expression '-' expression .
   50           | expression . '*' expression
   51           | expression . '/' expression

    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 49 (expression)


state 115

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   50           | expression '*' expression .
   51           | expression . '/' expression

    $default  reduce using rule 50 (expression)


state 116

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression
   51           | expression '/' expression .

    $default  reduce using rule 51 (expression)


state 117

   35 assignmentCommand: TK_IDENTIFIER '[' expression ']' . '=' expression

    '='  shift, and go to state 125


state 118

   59 argList: expression ',' . argList

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 96
    funCall     go to state 65
    argList     go to state 126


state 119

   57 funCall: TK_IDENTIFIER '(' argList ')' .

    $default  reduce using rule 57 (funCall)


state 120

   73 lcmdMeio: ';' cmd . lcmdMeio
   74         | ';' cmd .

    ';'  shift, and go to state 98

    $default  reduce using rule 74 (lcmdMeio)

    lcmdMeio  go to state 127


state 121

   61 ifCommand: KW_IF '(' expression ')' KW_THEN . cmd
   62          | KW_IF '(' expression ')' KW_THEN . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 36
    KW_WHILE       shift, and go to state 37
    KW_FOR         shift, and go to state 38
    KW_READ        shift, and go to state 39
    KW_PRINT       shift, and go to state 40
    KW_RETURN      shift, and go to state 41
    KW_BREAK       shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43
    '{'            shift, and go to state 44

    $default  reduce using rule 33 (cmd)

    cmd                go to state 128
    assignmentCommand  go to state 46
    whileCommand       go to state 47
    funCall            go to state 48
    ifCommand          go to state 49
    forCommand         go to state 50
    block              go to state 51


state 122

   56 whileCommand: KW_WHILE '(' expression ')' cmd .

    $default  reduce using rule 56 (whileCommand)


state 123

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression
   63 forCommand: KW_FOR '(' TK_IDENTIFIER ':' expression . ',' expression ',' expression ')' cmd

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ','           shift, and go to state 129


state 124

   55 expression: TK_IDENTIFIER '[' expression ']' .

    $default  reduce using rule 55 (expression)


state 125

   35 assignmentCommand: TK_IDENTIFIER '[' expression ']' '=' . expression

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 130
    funCall     go to state 65


state 126

   59 argList: expression ',' argList .

    $default  reduce using rule 59 (argList)


state 127

   73 lcmdMeio: ';' cmd lcmdMeio .

    $default  reduce using rule 73 (lcmdMeio)


state 128

   61 ifCommand: KW_IF '(' expression ')' KW_THEN cmd .
   62          | KW_IF '(' expression ')' KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 131

    $default  reduce using rule 61 (ifCommand)


state 129

   63 forCommand: KW_FOR '(' TK_IDENTIFIER ':' expression ',' . expression ',' expression ')' cmd

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 132
    funCall     go to state 65


state 130

   35 assignmentCommand: TK_IDENTIFIER '[' expression ']' '=' expression .
   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 35 (assignmentCommand)


state 131

   62 ifCommand: KW_IF '(' expression ')' KW_THEN cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 36
    KW_WHILE       shift, and go to state 37
    KW_FOR         shift, and go to state 38
    KW_READ        shift, and go to state 39
    KW_PRINT       shift, and go to state 40
    KW_RETURN      shift, and go to state 41
    KW_BREAK       shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43
    '{'            shift, and go to state 44

    $default  reduce using rule 33 (cmd)

    cmd                go to state 133
    assignmentCommand  go to state 46
    whileCommand       go to state 47
    funCall            go to state 48
    ifCommand          go to state 49
    forCommand         go to state 50
    block              go to state 51


state 132

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression
   63 forCommand: KW_FOR '(' TK_IDENTIFIER ':' expression ',' expression . ',' expression ')' cmd

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ','           shift, and go to state 134


state 133

   62 ifCommand: KW_IF '(' expression ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 62 (ifCommand)


state 134

   63 forCommand: KW_FOR '(' TK_IDENTIFIER ':' expression ',' expression ',' . expression ')' cmd

    TK_IDENTIFIER  shift, and go to state 59
    LIT_INTEGER    shift, and go to state 18
    LIT_FLOAT      shift, and go to state 19
    LIT_TRUE       shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 61

    init        go to state 62
    expression  go to state 135
    funCall     go to state 65


state 135

   41 expression: expression . OPERATOR_LE expression
   42           | expression . OPERATOR_GE expression
   43           | expression . OPERATOR_EQ expression
   44           | expression . OPERATOR_DIF expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . 'v' expression
   48           | expression . '+' expression
   49           | expression . '-' expression
   50           | expression . '*' expression
   51           | expression . '/' expression
   63 forCommand: KW_FOR '(' TK_IDENTIFIER ':' expression ',' expression ',' expression . ')' cmd

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    'v'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 136


state 136

   63 forCommand: KW_FOR '(' TK_IDENTIFIER ':' expression ',' expression ',' expression ')' . cmd

    KW_IF          shift, and go to state 36
    KW_WHILE       shift, and go to state 37
    KW_FOR         shift, and go to state 38
    KW_READ        shift, and go to state 39
    KW_PRINT       shift, and go to state 40
    KW_RETURN      shift, and go to state 41
    KW_BREAK       shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43
    '{'            shift, and go to state 44

    $default  reduce using rule 33 (cmd)

    cmd                go to state 137
    assignmentCommand  go to state 46
    whileCommand       go to state 47
    funCall            go to state 48
    ifCommand          go to state 49
    forCommand         go to state 50
    block              go to state 51


state 137

   63 forCommand: KW_FOR '(' TK_IDENTIFIER ':' expression ',' expression ',' expression ')' cmd .

    $default  reduce using rule 63 (forCommand)
